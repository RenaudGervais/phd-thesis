#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass classicthesis
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding default
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type numerical
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Bridging Desktop Computers and Physical Augmented Objects
\begin_inset CommandInset label
LatexCommand label
name "cha:tangible-viewports"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
systemnamens}{Tangible Viewports}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
systemname}{
\backslash
systemnamens
\backslash
,}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-video-teaser.jpg
	lyxscale 20
	width 100line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tports-video-teaser"

\end_inset

A workspace that allows the user to work both digitally (left) and physically
 (right).
 A tangible viewport (middle) allows physical objects to be used in the
 context of a screen.
 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
A workspace that allows the user to work both digitally and physically
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
This chapter presents Tangible Viewports (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-video-teaser"

\end_inset

), a proof-of-concept prototype that builds on the ideas presented in Chapter
 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:cursar"

\end_inset

 to create digital content on physical objects that are augmented using
 SAR.
 With CurSAR, we studied the performance of a standard pointing technique
 using 2D indirect devices, like the mouse, to reach targets displayed in
 the real world using SAR.
 We found out that pointing in SAR remains fully usable with a very reasonable
 performance drop of 11% compared to a screen condition.
 However, performance still is impacted negatively when removing the screen
 context.
 One of the research objective tackled in this thesis is the digital content
 creation and interaction for tangible augmented objects.
 Since most digital content creation tools are designed for standard input
 devices, we combined traditional computer screens, physical objects and
 the pointing technique studied with CurSAR in a single system.
 Effectively, it enables a seamless integration between desktop applications
 and physical objects.
 The objects behave in the same way as they would if they would be rendered
 in a traditional viewport.
\end_layout

\begin_layout Section
Context
\end_layout

\begin_layout Standard
Look at your work space right now.
 There is a high probability that the space is divided into two different
 areas: one for working digitally (computer) and one for working physically
 (pen and paper, books, building materials).
 Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-video-teaser"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-teaser"

\end_inset

 highlight such a typical desk.
 This dichotomy has been present in our work environments for a long time,
 and a lot of effort of the Tangible User Interfaces (TUI) community has
 been directed towards a digitally enriched physical space.
 Compared to the traditional mouse-based paradigm of computers, tangible
 interaction 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishii1997"

\end_inset

 has been shown to provide richer interaction experiences that are especially
 well suited for collaboration, situatedness and tangible thinking 
\begin_inset CommandInset citation
LatexCommand cite
key "Shaer2009"

\end_inset

.
\end_layout

\begin_layout Subsection
Tool-Based Interaction with SAR
\end_layout

\begin_layout Standard
Many different works are inspired by the use of physical tools for interaction
 with digital content and for its creation.
 Touch Tools leverage the muscle memory of our hands when using physical
 tools such as holding a pen or a camera to trigger the proper behavior
 on a multitouch surface 
\begin_inset CommandInset citation
LatexCommand citep
key "Harrison2014"

\end_inset

.
 IntuPaint 
\begin_inset CommandInset citation
LatexCommand citep
key "Vandoren2008"

\end_inset

 and MAI painting brush 
\begin_inset CommandInset citation
LatexCommand citep
key "Otsuki2010"

\end_inset

 are both systems that uses a physical paint brush to digitally paint real
 objects, while at the same time keeping the feeling of using a real brush.
 In the same line of thought, Cont√© 
\begin_inset CommandInset citation
LatexCommand citep
key "Vogel2011"

\end_inset

 is a tangible tool inspired by the multiple ways an artist uses a drawing
 instrument such as the crayon.
\end_layout

\begin_layout Standard
Many SAR systems rely on TUIs for interacting with the digital content.
 They include tools for editing the appearance of physical objects 
\begin_inset CommandInset citation
LatexCommand cite
key "Bandyopadhyay2001,Marner2009"

\end_inset

, sculpting 
\begin_inset CommandInset citation
LatexCommand cite
key "Piper2002,Marner2010"

\end_inset

 and educational purposes 
\begin_inset CommandInset citation
LatexCommand cite
key "Frey2014"

\end_inset

.
 TUIs are especially well suited for collaborative tasks and provide a strong
 situatedness 
\begin_inset CommandInset citation
LatexCommand cite
key "Shaer2009"

\end_inset

.
 The previously mentioned approaches are deeply rooted in physicality and
 stay away from traditional computer environments.
 
\end_layout

\begin_layout Standard
However, even when tangibility hold great promises for interaction, its
 use in real-world contexts remains rare, while we still use standard computers
 for the majority of our daily tasks involving digital information.
 The desktop computer is still a relevant tool to work with digital and
 physical matter, but we also think that its place on our desks should be
 rethought 
\begin_inset CommandInset citation
LatexCommand cite
key "Raskar1998,Rekimoto1999"

\end_inset

.
 Instead of being considered as a self-contained platform that happens to
 be installed on a desk and its reach limited to the extent of its screen,
 it should be considered as a tool part of the whole toolset laid onto the
 desk, aware and capable of interacting with its surroundings.
\end_layout

\begin_layout Subsection
Augmented and Smart Spaces
\end_layout

\begin_layout Standard

\emph on
Augmented and smart spaces
\emph default
 are systems that use see-through augmented reality or projectors, often
 in an office environment, to enhance the workspace.
 Raskar 
\emph on
et al.

\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "Raskar1998"

\end_inset

 proposed the idea of a hybrid workspace that would combine the physical
 environment with a spatially augmented display system in order to create
 a continuous mixed-reality space.
 Similarly, Augmented Surfaces 
\begin_inset CommandInset citation
LatexCommand cite
key "Rekimoto1999"

\end_inset

 is a system that creates interactive surfaces on a table, wall and laptop
 using projectors.
 Users could use their mouse cursor to drag information between the different
 surfaces.
 Moving towards desktop systems, Kane 
\emph on
et al.

\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "Kane2009"

\end_inset

 present a hybrid laptop-tabletop system that uses two pico-projectors mounted
 to a laptop computer to add interactive areas on the table around the device.
 The system is able to detect tangible objects on the table but does not
 augment them in any way.
 HoloDesk 
\begin_inset CommandInset citation
LatexCommand cite
key "Hilliges2012"

\end_inset

 is a situated see-through display where virtual and tangible objects can
 be manipulated directly with the users' hands, but does not integrate any
 traditional computer-related tasks.
 From an interaction point of view, the work of Lee 
\emph on
et al.

\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "Lee2013"

\end_inset

 is close to ours.
 They present a see-through desktop environment that supports transitioning
 from 2D and spatial 3D interactions easily.
 The system allows users to see the content of the screen and their hands
 behind it at the same time, only focusing on virtual elements.
 We are instead interested in bringing interaction with physical objects
 to a traditional desktop workspace.
 
\end_layout

\begin_layout Standard
There are different frameworks for interaction leveraging the use of SAR
 
\begin_inset CommandInset citation
LatexCommand citep
key "Verlinden2003,Spindler2012a,Xiao2013"

\end_inset

.
 Especially worth mentioning, and closer to the system described in this
 chapter, Akoaka et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Akaoka2010"

\end_inset

 created a platform for designing interactive augmented objects using 
\emph on
either
\emph default
 natural interaction 
\emph on
or
\emph default
 a standard desktop computer.
 We instead merge both together.
\end_layout

\begin_layout Subsection
Combining Physical Objects and Desktop Computers
\end_layout

\begin_layout Standard
We propose to leverage the potential of tangible interaction, while relying
 on the efficiency of standard desktop environments, in an integrated way.
 We present 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
systemnamens
\end_layout

\end_inset

, a screen-based tool enabling the use of tangible objects in a standard
 desktop-based workflow.
 Contrary to many tangible user interfaces where tokens and generic props
 are used, we use the physical objects as canvases that are also the results
 of the creative or visualization process.
 These objects are augmented with Spatial Augmented Reality (SAR).
 SAR is especially well suited for creating a hybrid work environment where
 digital workspaces can be combined with physical tools and canvases 
\begin_inset CommandInset citation
LatexCommand cite
key "Raskar1998,Rekimoto1999"

\end_inset

.
 It is possible to interact with these objects through direct touch or using
 tools.
 When held in front of the computer screen, the mouse cursor can seamlessly
 slide from the screen 
\emph on
onto
\emph default
 the surface of the objects and interaction with native desktop application
 becomes possible.
 For example, one can use a painting software to paint over the surface
 of the object as if it was part of the screen using the mouse cursor.
 From the viewpoint of the user, the object behaves just as a 3D model would
 when rendered in a viewport on the screen with the major exception that
 he can i) observe the object from a different viewpoint by moving the head
 and ii) reach out to grab the object with his hands and manipulate it freely
 as illustrated in Figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-teaser"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-desk.jpg
	lyxscale 10
	width 100line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tports-teaser"

\end_inset

 A real object can be placed in front of the screen to use it as a canvas
 for digital applications.
 Digital content is added using SAR.
 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Tangible Viewports in action
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this work, we emphasis the use of the desktop computer screen and its
 relation to augmented physical objects (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-teaser"

\end_inset

).
 This relation has been little explored as a complementary approach to tangible
 tools (e.g.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Marner2009"

\end_inset

).
 We suggest that it can be leveraged to create true hybrid applications
 that reduce the gap between highly flexible and expressive software, currently
 trapped inside a flat rectangular screen, and the intuitiveness and graspable
 nature of our environment.
\end_layout

\begin_layout Standard
The main contributions of this work are 1) 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
systemnamens
\end_layout

\end_inset

, an on screen window that enables interaction between a desktop computer
 and a physical object located in front of it, 2) a proof-of-concept prototype
 of an integrated workspace that combines augmented physical objects and
 native applications, and 3) the exploration of the interaction space of
 this hybrid work environment.
\end_layout

\begin_layout Section
Creating a Seamless Hybrid Space
\end_layout

\begin_layout Standard
This section describes the design considerations and implementation details
 of the system.
 More specifically, we will discuss the screen position in relation to the
 physical objects and give details about the augmentation setup, the behavior
 of the cursor and how it is handled as well as the use of direct touch
 and tools to interact with the augmented objects.
\end_layout

\begin_layout Subsection
Screen Positioning
\end_layout

\begin_layout Standard
The general idea of our system is to embed physical objects within the standard
 desktop paradigm.
 
\begin_inset Note Comment
status open

\begin_layout Plain Layout
 To do so, we introduce the concept of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
systemname
\end_layout

\end_inset

 that brings physicality to standard flat screens.
 
\end_layout

\end_inset

We consider the screen and chosen physical objects on the desk as spatial
 canvases where digital information can be displayed.
 This design differs from other approaches (e.g.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Rekimoto1999"

\end_inset

) that extend the reach of the cursor to the environment, while we bring
 the physical objects within reach of the screen cursor.
 We tested different ways to position the screen in relation to the augmented
 objects before settling for the current design: in front, on the side and
 behind.
 We ended up selecting to position the screen 
\emph on
behind
\emph default
 the object.
\end_layout

\begin_layout Subsubsection
Screen 
\emph on
in front
\emph default
 object
\end_layout

\begin_layout Standard
In this configuration, we positioned the augmented object 
\emph on
behind
\emph default
 the screen -- see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-screen-front-obj"

\end_inset

.
 The screen was a graphics tablet replicating the user's view on the physical
 object.
 It was possible for the user to draw on the screen to digitally paint the
 object.
 The digital paint was reprojected in real-time on the physical object in
 the back.
 Also, both the user's head and the physical object were tracked which enabled
 the user to manipulate his viewpoint freely -- the viewpoint is updated
 for both the graphics tablet and the real view.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-obj-behind-screen.jpg
	lyxscale 20
	width 100line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tports-screen-front-obj"

\end_inset

An augmented object is located behind a graphics tablet on which the user's
 view of the object is replicated.
 The user can draw on the object using the tablet.
 The drawings are synchronized on the physical object in real-time.
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Screen located 
\emph on
in front
\emph default
 of augmented object
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The idea with this design was to ease the activity of drawing on an object
 by providing a flat surface onto which to draw -- which is often easier
 to use for stability and flexibility, such as the capability to zoom on
 the drawing, purposes -- while retaining the haptic properties of having
 a real object.
 Moreover, the synchronized views would allow for reviewing the design using
 the real object instead of a virtual rendering.
 The ability to handle the object with the hands also provided a good option
 to quickly place the object in the desired viewpoint.
 However, our first tests with this design encouraged the use of the physical
 object, not as a canvas, but simply as a props to control the orientation
 of the virtual model in 6 DoF.
 We instead wanted to put emphasis on the physical object itself because,
 even though the 3D virtual rendering often looks 
\begin_inset Quotes eld
\end_inset

nicer
\begin_inset Quotes erd
\end_inset

, the result of the object design process will evolve in the real physical
 world.
\end_layout

\begin_layout Subsubsection
Screen 
\emph on
beside
\emph default
 object
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-obj-beside-screen.jpg
	lyxscale 20
	width 100line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
<caption>
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Screen 
\emph on
behind
\emph default
 object
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
HERE
\end_layout

\end_inset

The transition from a 2D cursor located inside the screen to a cursor following
 the 3D geometry of the surrounding physical environment requires a change
 in paradigm for the users.
 Instead, we embed the object 
\emph on
in front
\emph default
 of the screen to reduce this change of context, as illustrated in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-sar-cursor-and-user"

\end_inset

.
 This design choice is supported by studies that have shown the very low
 performance drop for focal depth changes compared to angular movements
 
\begin_inset CommandInset citation
LatexCommand cite
key "Tan2003,Cauchard2011"

\end_inset

.
 In our current system configuration, normal use causes shallow depth of
 scene (
\begin_inset Formula $<50cm$
\end_inset

 -- a working space created by a typically recommended distance between
 the user and the screen) and users are not required to rotate the head
 position.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-cursor-teaser.png
	lyxscale 40
	width 75line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\lang english
\begin_inset CommandInset label
LatexCommand label
name "fig:tports-sar-cursor-and-user"

\end_inset


\lang american
 The user can interact with the augmented object when located in front of
 the screen, emulating the behavior of a 3D viewport.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Spatial Augmented Reality Setup
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
@TODO: Move the redundant stuff to the SAR chapter
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Our SAR setup is comprised of an augmented desktop environment and physical
 objects that can be brought in front of the screen.
 The objects can be manipulated freely by the user, or they can be placed
 on a support for convenience.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-sar-setup"

\end_inset

 illustrates the setup.
 The projector handling the augmentation is located behind the user, and
 oriented so that its vertical field of view would span from the edge of
 the desk up to the top of the screen.
 It only emits light towards the physical object, so it does not perturb
 the visualization of the screen.
 The augmentation is generated using the techniques detailed in Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:sar-how-does-it-work"

\end_inset

.
\end_layout

\begin_layout Standard
We use 3D printed objects created using a MakerBot Replicator 2 in white
 PLA plastic with a precision of 
\begin_inset Formula $\pm0.2$
\end_inset

mm.
 Alternatively, we could use already existing or sculpted objects given
 that they would require 3D scanning before, using KinectFusion 
\begin_inset CommandInset citation
LatexCommand cite
key "Newcombe2011"

\end_inset

 for example.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-sar-setup.png
	lyxscale 40
	width 80line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\lang english
\begin_inset CommandInset label
LatexCommand label
name "fig:tports-sar-setup"

\end_inset


\lang american
The SAR installation: A) The desktop environment using a standard screen
 and input devices, B) 6DOF tracking system (OptiTrack Trio and Microsoft
 Kinect v2), C) Projector and D) Physical objects that are being augmented.
 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
The installation for Tangible Viewports
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Cursor Handling in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
systemname
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The key element on which our system relies is to create the illusion that
 a physical object is entirely part of the screen space when located in
 front of it.
 In order to do so, we ensure that the cursor movements inside the working
 area occur in a continuous way, independently of where this cursor is displayed
 (screen or tangible viewport).
 The user thus perceive the visual space as a whole.
 
\end_layout

\begin_layout Standard
A window dedicated to the interaction with the object is created on the
 screen and its position is retrieved by using the Windows API.
 The screen is also tracked in world space by the OptiTrack system.
 Thus, knowing the 2D cursor position in the viewport space allows us to
 infer its position in world coordinates.
 A virtual camera is created to reproduce the user's view of the window
 (and whichever augmented object located in front of it).
 The user's head position is obtained by Kinect v2 skeleton tracking.
 As soon as a physical object starts occluding the screen's cursor for the
 observer, a 3D cursor appears at the correct location on the object, as
 illustrated in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-cursor-screen-obj-transition"

\end_inset

.
 This is done by raycasting in world-space over the virtual scene from the
 user's viewpoint to the screen's cursor position (Figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-sar-cursor-and-user"

\end_inset

).
 We thus obtain the 3D position and orientation on the first element on
 the line of sight of the user.
 The resulting transformation is then applied to the 3D cursor, which is
 displayed as a small disk aligned with the local surface's normal.
 This cursor is rendered as part of the virtual scene and reprojected onto
 the augmented object.
 On the screen, a horizontal and a vertical line passing through the cursor
 position are displayed for enforcing the link between the tangible viewport
 and the screen.
 
\end_layout

\begin_layout Standard
In the end, this technique is fully transparent to the users.
 Users work with Tangible Viewports as they would do with any standard applicati
on.
 It is also to be noted that the head position of the user only impacts
 the 
\emph on
behavior
\emph default
 of the cursor; the cursor's appearance and the augmentations on the object
 are completely viewpoint independent.
 This is especially important for collaborative settings.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-cursor-pov-initial.png
	lyxscale 10
	width 33line%

\end_inset


\begin_inset Graphics
	filename ../img/tports-cursor-pov-moving.png
	lyxscale 10
	width 33line%

\end_inset


\begin_inset Graphics
	filename ../img/tports-cursor-pov-final.png
	lyxscale 10
	width 33line%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename ../img/tports-cursor-objective-initial.png
	lyxscale 10
	width 28line%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename ../img/tports-cursor-objective-moving.png
	lyxscale 10
	width 28line%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename ../img/tports-cursor-objective-final.png
	lyxscale 10
	width 28line%

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout

\lang english
\begin_inset CommandInset label
LatexCommand label
name "fig:tports-cursor-screen-obj-transition"

\end_inset


\lang american
(Top Row) From the point of view of the user, the cursor behaves as if the
 object was part of a 3D viewport.
 (Bottom row) Side view showing the actual behavior of the mouse cursor,
 
\begin_inset Quotes eld
\end_inset

jumping
\begin_inset Quotes erd
\end_inset

 from the screen onto the object when being occluded by the object from
 the user's viewpoint.
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Sketch demonstrating the cursor behavior of Tangible Viewports
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Direct Touch and Gestures
\end_layout

\begin_layout Standard
Beyond cursor interaction in front of the screen, direct touch on the objects
 is also supported.
 This is achieved by attaching a small reflective marker to a ring on the
 user's finger or on a tool (e.g.
 pen) so that it is detected by the OptiTrack system.
 We also tested the use of the Leap Motion in order to avoid instrumenting
 the finger of the user.
 However, the Leap is unable to detect direct touch and is better suited
 for fine gestures 
\emph on
near
\emph default
 the object.
 For coarse gestures, the hand tracking of the Kinect API is sufficient.
\end_layout

\begin_layout Section
Interaction
\end_layout

\begin_layout Standard
In our hybrid workspace, interaction can either take place on the screen,
 on the augmented object, or on both display supports at the same time.
 In the following sections, we explore the interaction space by describing
 examples of techniques that we developed for each of these categories (Table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:tports-interaction-space"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
linewidth}{!}{
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="5">
<features rotate="0" booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="middle" width="5col%">
<column alignment="center" valignment="top">
<column alignment="center" valignment="middle" width="30col%">
<column alignment="center" valignment="middle" width="30col%">
<column alignment="center" valignment="middle" width="30col%">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" usebox="none" width="80col%">
\begin_inset Text

\begin_layout Plain Layout

\shape smallcaps
\emph on
MODALITY
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Mouse and Keyboard
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Hybrid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Touch and Gesture
\end_layout

\end_inset
</cell>
</row>
<row>
<cell mroffset="-1.25cm" alignment="left" valignment="top" topline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Screen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Widgets, native applications, programming
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
--
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Touch screen based interfaces
\emph on
*
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" mroffset="0.5cm" alignment="left" valignment="middle" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape smallcaps
\emph on
LOCATION
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Hybrid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Drag and drop, hybrid widgets
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pick and drop, object annotations, data visualization
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gestural control of virtual version
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Object
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pointing on objects
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bimanual interaction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Navigation, tangible design
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
*
\emph default
 Out of the scope
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:tports-interaction-space"

\end_inset

Interaction space around 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
systemnamens
\end_layout

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Screen
\end_layout

\begin_layout Standard
Because our objective was to conceive a system that benefits from the advantages
 of standard desktops, all the usual techniques designed for such environments
 can directly be used.
\end_layout

\begin_layout Subsubsection
Widgets
\end_layout

\begin_layout Standard
We have designed a custom application based on such standard widgets for
 modifying the appearance of an augmented object (See Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-features"

\end_inset

).

\series bold
 
\series default
For example, selecting the background color of an augmented object can be
 done directly by way of a color palette.
 This application served as a basis for the evaluation of the system that
 we present later in this paper.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-direct-painting.jpg
	lyxscale 20
	width 49line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:tports-painting"

\end_inset

Direct painting on the object using the mouse cursor
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-virtual-element.jpg
	lyxscale 20
	width 49line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:tports-virtual-elements"

\end_inset

Virtual elements interaction
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-screen-vvvv.jpg
	lyxscale 7
	width 49line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:tports-creative-coding"

\end_inset

Creative coding
\end_layout

\end_inset


\end_layout

\end_inset

 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-screen-photoshop.jpg
	lyxscale 7
	width 49line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:tports-uv-painting"

\end_inset

UV painting using Photoshop
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tports-features"

\end_inset

Different features to modify the appearance and behavior of the physical
 object.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Native Applications
\end_layout

\begin_layout Standard
It is also possible to use native professional applications.
 As an example, we linked the output of Adobe Photoshop, a software that
 is ubiquitously used in the design and artistic industries, to our system.
 Hence, we leverage the skills that professionals already acquired with
 these tools.
 The most straightforward use is UV painting (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "subfig:tports-uv-painting"

\end_inset

) which consists of adding graphics on a 3D model.
 It is a task that can be done either in a 2D painting environments using
 a UV layout or directly on a 3D view of the object.
 Both can be achieved using Photoshop.
 We retrieve the texture that is being painted in real-time and update the
 augmented object accordingly.
 Every time an operation is performed on the design, the physical object's
 appearance also gets updated.
 This can be especially useful in object design, where the final result
 is not a 3D render but an actual object.
\end_layout

\begin_layout Subsubsection
Programming
\end_layout

\begin_layout Standard
In addition to the connection of existing tools, we also included Creative
 Coding capabilities.
 In practice, creative coding is often comprised of programming toolkits
 that are focused on visual results and short feedback loops.
 For these reasons, it is often used for prototyping.
 Examples of such toolkits include Processing, OpenFrameworks and vvvv.
 These approaches make it possible to envision a near future where physical
 objects are comprised of thin and flexible screens 
\begin_inset CommandInset citation
LatexCommand cite
key "holman2013design"

\end_inset

 and with which users could tinker with their augmented content (dynamic
 appearances and behaviors).
 Programming is an activity that is almost exclusively conveyed on standard
 computers.
 It is possible, then, to create a program and visualize its execution in
 real-time on a tangible object.
 As an example, we programmed a short example where the appearance of a
 clock evolves with the time.
 The results of this program can be visualized directly on an augmented
 physical clock (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "subfig:tports-creative-coding"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
@TODO: OUI should have been brought up before in Part I of the thesis.
 Refer to it and mention that it would relates well to the CCoO concept.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Physical Object
\end_layout

\begin_layout Standard
This section presents the interaction techniques we have implemented to
 support the use of physical objects: direct interaction, pointing on object
 using the tangible viewport window and bimanual interaction.
\end_layout

\begin_layout Subsubsection
Direct Interaction
\end_layout

\begin_layout Standard
Working with physical objects has the benefit of enabling manipulation directly
 with the hands.
 No 2D to 3D mapping operations are required to create a desired point of
 view as is required in desktop 3D applications.
 Also, since the augmentation occurs on the surface of the object, changing
 the viewpoint can simply be achieved my moving the head.
 The user can thus observe the object in a natural way, which radically
 differs from what he or she is used to do with a virtual version of models
 displayed on flat screens.
 Also, direct touch can be used whenever precision or specific tools are
 not required.
 For example, when creating interactive objects, one can use interactors
 or trigger behaviors directly, similar to 
\begin_inset CommandInset citation
LatexCommand cite
key "Akaoka2010"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Pointing on Objects
\end_layout

\begin_layout Standard
In addition to direct manipulation of the tangible objects, our system supports
 cursor-based indirect interaction for completing interaction tasks directly
 onto the physical objects.
 These tasks can be pointing, drawing, selecting or moving virtual elements.
 Compared to an approach where the user would interact directly on the physical
 object, indirect interaction offers several complementary advantages.
 It does not require specific input devices, it is fast and accurate, and
 it integrates within the desktop workflow.
\end_layout

\begin_layout Subsubsection
Bimanual Interaction
\end_layout

\begin_layout Standard
Handling the physical object and using the mouse can be achieved at the
 same time following a bimanual interaction approach 
\begin_inset CommandInset citation
LatexCommand cite
key "Balakrishnan1999"

\end_inset

.
 The hand holding the object plays the role of reference frame and assists
 the dominant hand which is dedicated to fine mouse movements.
 This approach leverages the precision and stability of 2D pointing and
 the easiness of 6 degree of freedom manipulations of 3D objects.
\end_layout

\begin_layout Subsection
Hybrid Screen/Object
\end_layout

\begin_layout Standard
Both the physical objects and the screen are part of the same working space.
 Consequently, it is possible to directly link operations on the screen
 with actions on the physical objects.
 The converse is also true.
 We present application examples that use both object and screen simultaneously.
\end_layout

\begin_layout Subsubsection
Drag and Drop
\end_layout

\begin_layout Standard
Since the viewport creates a seamless continuum between the screen and the
 object, drag and drop operations can be used with the mouse cursor.
 This operation would not be possible using touch and would have to be replaced
 by pick and drop.
\end_layout

\begin_layout Subsubsection
Hybrid Widgets
\end_layout

\begin_layout Standard
The standard approach for applying transformations (e.g.
 scaling and rotation) to visual elements displayed on a screen is to use
 widgets centered on these elements.
 The problem with standard SAR setups is that, although technically possible
 
\begin_inset CommandInset citation
LatexCommand cite
key "Benko2014"

\end_inset

, it is very difficult to create the illusion of floating visual elements
 around the object as soon as no material can support the display.
 We designed hybrid widgets that are operated on screen.
 We reproject the position of the selected element on the screen based on
 the user's viewpoint and we place 2D widgets centered on this location.
 When moving the physical object, the position of the widgets is updated
 accordingly on the screen.
 These transformation widgets that allow the rotation and scaling of the
 selected element are illustrated in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "subfig:tports-virtual-elements"

\end_inset

.
 They are relatively big and they do not touch directly the physical objects.
 This design choice has been made to avoid problems of eye accommodation
 between the depth of the object and the depth of the screen.
 Hence, after selecting an object to modify, users can quickly grab and
 manipulate the widgets, without eye fatigue.
\end_layout

\begin_layout Subsubsection
Object Annotation
\end_layout

\begin_layout Standard
Another opportunity offered by the fact that a screen stands behind the
 physical object concern the display and the entry of text.
 Indeed, these operations may be difficult to complete in many traditional
 SAR setups.
 In our case, it is easy to annotate a physical object by selecting an anchor
 point (either with the mouse or direct touch) and typing a related note
 being displayed on the screen, with the keyboard.
 Inversely, one can select a note on the screen, and see the corresponding
 area directly on the physical object.
 This creates a text box positioned in an empty zone of the screen which
 is linked to the projected position on the screen of the anchor point.
\end_layout

\begin_layout Subsubsection
Physical Data Visualization
\end_layout

\begin_layout Standard
Beyond annotations that can benefit to many fields (e.g.
 inspection of manufactured objects), we have explored the use of a hybrid
 approach in the scope of data visualization.
 Data visualization (and especially 3D data visualization) has been shown
 to gain from a physical representation 
\begin_inset CommandInset citation
LatexCommand cite
key "Jansen2013"

\end_inset

.
 Using the tangible viewport window, it is possible to add interactivity
 to physical visualization.
 In particular, to query more information on some aspects of the visualization,
 one can just point at the area of interest to see related data on the screen,
 or she or he can select an entry on the screen to see the corresponding
 elements on the physical visualization (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "subfig:tports-dataviz"

\end_inset

).
\end_layout

\begin_layout Subsubsection
Synchronized Views
\end_layout

\begin_layout Standard
We also explored the synchronization between a virtual version of an object
 displayed on screen and a physical one.
 When the tangible object is not in front of the screen, the tangible viewport
 window displays a virtual version of the augmented object (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "subfig:tports-dataviz"

\end_inset

).
 Modifying the virtual version updates the tangible version in real-time.
 
\end_layout

\begin_layout Standard
Being able to have two representations of an augmented object, one on screen
 and one physical opens possibilities, namely for collaboration.
 For example, it would be possible to expose the view of a user handling
 the physical object or providing advanced visualizations such as a heat
 map of touched areas (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "subfig:tports-sync-heatmap"

\end_inset

).
 Also, multiple users can have their own duplicated augmented object (Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "subfig:tports-multiple-objects"

\end_inset

).
 These users can be working either locally or remotely.
 
\end_layout

\begin_layout Standard
The synchronization between real and virtual can be paused, for example
 using a gesture (e.g.
 pulling the object rapidly away from the window), to compare multiple versions.
 Bringing back the physical object in front of the window merges the two
 versions on the physical canvas.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-synchro-dataviz.jpg
	lyxscale 20
	width 49line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:tports-dataviz"

\end_inset

Direct painting on the object using the mouse cursor
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-synchro-multi-objects.jpg
	lyxscale 20
	width 49line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:tports-multiple-objects"

\end_inset

Virtual elements interaction
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-synchro-sync.jpg
	lyxscale 20
	width 49line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:tports-sync-obj-screen"

\end_inset

Creative coding
\end_layout

\end_inset


\end_layout

\end_inset

 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-synchro-heatmap.jpg
	lyxscale 20
	width 49line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:tports-sync-heatmap"

\end_inset

UV painting using Photoshop
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tports-synchronization-screen-tangible"

\end_inset

Different synchronization modes between virtual on-screen and tangible versions.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Illustrative scenario
\end_layout

\begin_layout Standard
To illustrate the use of Tangible Viewports, we describe here an object
 design scenario where an artist is experimenting with new visual design
 ideas for a product (see complementary video).
\end_layout

\begin_layout Standard
She can start by sketching first ideas on a paper, and then use a modeling
 tool to create a 3D sketch.
 Equipped with a 3D printer, she can print one (or many) physical objects
 to have in front of her.
 She can first directly paint on the object using the mouse cursor.
 Then, she can use a digital painting application such as Adobe Photoshop
 or a vector graphics editor like Inkscape to draft a logo on her computer.
 Then, using the mouse, seamlessly drag the logo from the editor directly
 to the physical prototype she just printed.
 The prototype can be physically manipulated to review the appearance.
 Modification to the design on the desktop computer will be automatically
 reflected in real-time onto the object.
 She can scale and rotate the logo directly on the physical object to see
 directly the impact of her modifications.
 This way, the feedback loop between the design activities (which require
 specialized software) and the validation of the effect it has in physical
 form can be greatly reduced.
 If required, new versions of physical objects can iteratively be 3D-printed,
 as we currently do with 2D printers when working on 2D documents.
 By making the interaction with the physical objects coherent with the tradition
al way of manipulating 3D information on a desktop computer, it is possible
 to leverage the experience of users with their professional tools, while
 at the same time adding the richness of tangibility and physical visualization.
\end_layout

\begin_layout Standard
For this illustrative scenario, it is worth mentioning the work of Saakes
 et al.
 
\begin_inset CommandInset citation
LatexCommand citep
key "Saakes2012"

\end_inset

, consisting in a physical material that can retain its appearance after
 being exposed to visible light.
 For an object design application, this has the potential to make the use
 of SAR a serious contender to generate visual designs that are not limited
 to dark environments and dependent on projectors being located in the room.
 
\end_layout

\begin_layout Standard
In our scenario, we can also imagine one or several collaborators participating
 to the design choices.
 These collaborators can directly observe and manipulate the augmented object,
 and ask the main designer to update the design in real time.
 This kind of social collaboration is harder to obtain with traditional
 design tools.
\end_layout

\begin_layout Section
User Feedback and Discussion
\end_layout

\begin_layout Standard
We conducted an exploratory study where we asked participants to manipulate
 a preliminary version of the system, as well as a non-tangible version
 of the tool.
 The objective of this study was to assess how physical objects integrate
 within a standard screen space.
 We have designed a simple custom creation tool (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "subfig:tports-painting"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "subfig:tports-virtual-elements"

\end_inset

) for this purpose.
 Fourteen participants (9 males, 5 females, mean age 
\begin_inset Formula $25.6$
\end_inset

 (
\begin_inset Formula $SD=3.7$
\end_inset

)) took part in this study.
 Half of the participants started the experiment with Tangible Viewport,
 then they moved to the non-tangible one, and half did the opposite.
 In both cases, participants were introduced to the main features of the
 tool, and the experimenter explained what was expected from them.
 Participants were asked to create a personal visual design of a clock.
 The only difference between the two versions of the tool is that, in the
 tangible version, the results of the creation was directly displayed on
 a 3D printed clock, whereas the virtual representation of the model was
 used in the standard viewport version.
 For changing the view on the object, subjects had to either manipulate
 the object and/or move the head 
\begin_inset Quotes eld
\end_inset

naturally
\begin_inset Quotes erd
\end_inset

 with Tangible Viewport, whereas they were using a trackball metaphor operated
 with the mouse middle-button in the standard viewport version, as commonly
 done in standard desktop 3D tools.
\end_layout

\begin_layout Standard
Subjects were asked to follow a tutorial for customizing their clock (Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tports-user-creations"

\end_inset

), which included: 1) choosing a background color and painting the front
 face, 2) adding virtual elements and resize/rotate them, and 3) making
 a drawing on the side and back of the object.
 This scenario was designed to ensure that the main features of the tool
 were used under different conditions.
 For example, Step 3 tests the ability of the participants to draw freely
 on curved surfaces.
 
\end_layout

\begin_layout Standard
After the experiment, participants where asked to answer two questionnaires:
 the User Experience Questionnaire 
\begin_inset CommandInset citation
LatexCommand cite
key "Laugwitz2008"

\end_inset

 and a custom questionnaire aiming at obtaining user feedback about the
 usability of the tested systems (5 points Likert scale) and their preferences
 between the two.
 Both questionnaires showed no significant difference between the two versions
 of the system.
 They were also invited to leave comments and feedback about what they liked
 and disliked about each version of the system.
 Overall, the majority of the participants preferred manipulating the tangible
 version (12 out of 14) and were more satisfied with the final result (11/14).
 No participant mentioned difficulties moving from the screen to the object.
 These results seem to indicate that the tangible viewport metaphor works
 well, and it is comfortable to use.
\end_layout

\begin_layout Standard
Regarding the comments, among the most appreciated features spontaneously
 cited by the subjects is the ability to work with a real object (9/14)
 and to have a physical view on the final product (6/14).
 For example S1 liked that 
\emph on

\begin_inset Quotes eld
\end_inset

you can see the real object with the elements you draw.
 That way, you can observe the final product before it is produced
\begin_inset Quotes erd
\end_inset


\emph default
.
 S9 mentioned that 
\emph on

\begin_inset Quotes eld
\end_inset

The creation feels much less virtual
\begin_inset Quotes erd
\end_inset


\emph default
 and that 
\emph on

\begin_inset Quotes eld
\end_inset

going from the screen to the object is fun
\begin_inset Quotes erd
\end_inset


\emph default
.
 A few participants also insisted that they liked to be able to manipulate
 the object with their hands (5/14), while others found it uncomfortable
 (5/14): the tangible objects were attached to a tracked magnetic base that
 could then be connected to an articulated arm; this was later corrected
 by removing the base, and adding the markers directly on the object so
 that the objects could be handled directly.
 Complaints were made (5/14) regarding the fact that the editor lacked important
 features such as 
\begin_inset Quotes eld
\end_inset

undo
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

magic wand
\begin_inset Quotes erd
\end_inset

.
 This highlights that the interaction between the screen and the object
 was working well enough that the main focus was about the painting features.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-userstudy-3.jpg
	lyxscale 10
	width 24line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-userstudy-1.jpg
	lyxscale 10
	width 24line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-userstudy-4.jpg
	lyxscale 10
	width 24line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../img/tports-userstudy-2.jpg
	lyxscale 10
	width 24line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tports-user-creations"

\end_inset

Examples of participants' creations using Tangible Viewports.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Regarding the technical solution, several participants (6/14) mentioned
 that the augmentation calibration was not precise enough, which could be
 improved by using more advanced known solutions such as the one used by
 Jones 
\emph on
et al.

\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "Jones2014"

\end_inset

.
 They also explicitly mentioned some delays and robustness issues on the
 head tracking (5/14).
 The second iteration of the system corrected these issues by replacing
 face tracking by skeleton based head tracking and better Kinect positioning.
 Regarding the cursor, some participants (4/14) did not like the fact that
 changing the head position was moving the cursor on the object, a side
 effect of using perspective cursor.
 This issue could be addressed with a system that would prevent the cursor
 on the object to move when the head position of the user changes and instead
 correct the on-screen cursor's position when it reaches the edge of the
 object's silhouette, from the user's point of view.
 Such alternatives will be studied on the future
\end_layout

\begin_layout Section
Conclusion and Future Work
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
@TODO: Remove conclusion and focus on future work and discussion
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this paper, we have introduced Tangible Viewports and we have described
 an effective implementation of this concept.
 A preliminary study showed that the overall usability of this system is
 good.
 Tangible Viewports do not aim at replacing existing systems.
 Indeed, we have shown that, from a technical and user point of view, the
 seamless integration of physical and virtual tools is not just feasible
 but enriches both.
\end_layout

\begin_layout Standard
One of the current limitations of a tangible approach is the rigidity of
 the physical elements, which cannot (yet) be reshaped in real time.
 Our vision is that 3D printing will become as efficient as 2D printing
 in a near future.
 Hence, one will be able to use the flexibility of virtual elements to explore
 variations of geometries, and use physical elements as soon as he or she
 will require a perception of the created shape that goes beyond a simple
 rendering on a 2D screen.
\end_layout

\begin_layout Standard
In the future, we would like to assess more precisely how Tangible Viewports
 may leverage creativity in professional uses.
 This will require dedicated user studies with targeted users for investigating
 in more depth on how interactive physicality impacts performance.
 Finally, Tangible Viewports leverage the desktop computer capabilities
 as part of a set of tools to interact with physical matter.
 In the future, we plan go further, by merging the desktop on the workbench
 itself.
\end_layout

\end_body
\end_document
